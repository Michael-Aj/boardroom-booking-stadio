@model BoardroomBooking4.Models.Booking
@using BoardroomBooking4.Models
@{
    ViewData["Title"] = "Edit Booking";
    var venues = (IEnumerable<Venue>)ViewData["Venues"]!;
}

<!-- ─── Header ───────────────────────────────────────────────────── -->
<div class="d-flex justify-content-between align-items-center mb-4">
    <h1 class="h3 m-0">
        <i class="bi bi-pencil-square text-primary me-2"></i>@ViewData["Title"]
    </h1>
    <a asp-action="Index" class="btn btn-outline-secondary rounded-pill">
        <i class="bi bi-arrow-left"></i> Back
    </a>
</div>

<!-- ─── Form card ────────────────────────────────────────────────── -->
<form asp-action="Edit" method="post" class="card border-0 shadow-sm rounded-4">
    @Html.AntiForgeryToken()
    <input type="hidden" asp-for="Id" />

    <div class="card-body p-4">
        <!-- Validation summary -->
        <div asp-validation-summary="ModelOnly" class="alert alert-danger rounded-3 py-2" role="alert"></div>

        <div class="row g-4">
            <!-- Venue ------------------------------------------------>
            <div class="col-lg-6">
                <label asp-for="VenueId" class="form-label fw-semibold">Venue</label>
                <select asp-for="VenueId"
                        asp-items="@(new SelectList(venues, nameof(Venue.Id), nameof(Venue.Name)))"
                        class="form-select rounded-pill py-2">
                    <option value="">-- choose venue --</option>
                </select>
                <span asp-validation-for="VenueId" class="text-danger small"></span>
            </div>

            <!-- Title ----------------------------------------------->
            <div class="col-lg-6">
                <label asp-for="Title" class="form-label fw-semibold"></label>
                <input asp-for="Title" class="form-control rounded-pill py-2" />
                <span asp-validation-for="Title" class="text-danger small"></span>
            </div>

            <!-- Start (minutes only) -------------------------------->
            <div class="col-md-6">
                <label asp-for="StartUtc" class="form-label fw-semibold">Start (local time)</label>
                <div class="input-group rounded-pill">
                    <span class="input-group-text"><i class="bi bi-clock"></i></span>
                    <input asp-for="StartUtc"
                           type="datetime-local"
                           class="form-control border-start-0"
                           asp-format="{0:yyyy-MM-ddTHH:mm}"
                           step="60" />
                </div>
                <span asp-validation-for="StartUtc" class="text-danger small" data-valmsg-for="StartUtc"></span>
            </div>

            <!-- End (minutes only) ---------------------------------->
            <div class="col-md-6">
                <label asp-for="EndUtc" class="form-label fw-semibold">End (local time)</label>
                <div class="input-group rounded-pill">
                    <span class="input-group-text"><i class="bi bi-clock-history"></i></span>
                    <input asp-for="EndUtc"
                           type="datetime-local"
                           class="form-control border-start-0"
                           asp-format="{0:yyyy-MM-ddTHH:mm}"
                           step="60" />
                </div>
                <span asp-validation-for="EndUtc" class="text-danger small" data-valmsg-for="EndUtc"></span>
            </div>

            <!-- Description ----------------------------------------->
            <div class="col-12">
                <label asp-for="Description" class="form-label fw-semibold"></label>
                <textarea asp-for="Description" rows="3" class="form-control rounded-4"></textarea>
                <span asp-validation-for="Description" class="text-danger small"></span>
            </div>
        </div>
    </div>

    <!-- Footer buttons --------------------------------------------->
    <div class="card-footer bg-white border-0 p-4 text-end">
        <button class="btn btn-primary rounded-pill px-4">
            <i class="bi bi-save me-1"></i>Save changes
        </button>
        <a asp-action="Index" class="btn btn-outline-secondary rounded-pill px-4 ms-2">Cancel</a>
    </div>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <style>
        .card:hover {
            transform: translateY(-2px);
            transition: .2s ease;
        }
    </style>
    <script>
        // Same cross-field client check on Edit
        (function () {
            function parseLocal(input) { return input && input.value ? new Date(input.value) : null; }

            function showEndError(form, msg) {
                const end = form.querySelector('[name="EndUtc"]');
                const span = form.querySelector('[data-valmsg-for="EndUtc"]');
                if (end) end.classList.add('is-invalid');
                if (span) { span.textContent = msg || ''; span.classList.add('field-validation-error'); }
            }
            function clearEndError(form) {
                const end = form.querySelector('[name="EndUtc"]');
                const span = form.querySelector('[data-valmsg-for="EndUtc"]');
                if (end) end.classList.remove('is-invalid');
                if (span) { span.textContent = ''; span.classList.remove('field-validation-error'); }
            }
            function validate(form) {
                const s = parseLocal(form.querySelector('[name="StartUtc"]'));
                const e = parseLocal(form.querySelector('[name="EndUtc"]'));
                if (s && e && e <= s) { showEndError(form, 'End time must be after start time.'); return false; }
                clearEndError(form); return true;
            }

            document.addEventListener('DOMContentLoaded', function () {
                const form = document.querySelector('form[method="post"]');
                if (!form) return;

                form.addEventListener('submit', function (ev) { if (!validate(form)) ev.preventDefault(); });

                ['change', 'blur', 'keyup'].forEach(ev => {
                    const s = form.querySelector('[name="StartUtc"]');
                    const e = form.querySelector('[name="EndUtc"]');
                    if (s) s.addEventListener(ev, () => validate(form));
                    if (e) e.addEventListener(ev, () => validate(form));
                });
            });
        })();
    </script>
}
